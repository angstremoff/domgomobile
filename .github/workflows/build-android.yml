name: Сборка Android

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Клонируем репозиторий
      - name: Скачиваем код
        uses: actions/checkout@v3
      
      # 2. Настраиваем Node.js
      - name: Настройка Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      # 3. Устанавливаем зависимости
      - name: Установка зависимостей
        run: npm ci --legacy-peer-deps

      # 4. Настраиваем Java
      - name: Настройка Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 5. Создаем keystore для подписи APK
      - name: Настройка подписи APK
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "MYAPP_UPLOAD_STORE_FILE=upload-keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties

      # 6. Собираем APK
      - name: Сборка APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease --no-daemon
          ls -la app/build/outputs/apk/release/
          
      # 7. Сохраняем APK для скачивания
      - name: Сохраняем информацию об APK
        run: |
          echo "APK успешно собран!"
          echo "Размер APK: $(du -h android/app/build/outputs/apk/release/app-release.apk | cut -f1)"
          echo "MD5: $(md5sum android/app/build/outputs/apk/release/app-release.apk | cut -d' ' -f1)"
          
      # 8. Сохраняем APK как артефакт сборки
      - name: Загрузка артефакта
        uses: actions/upload-artifact@v2
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
